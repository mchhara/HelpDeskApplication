@model HelpDeskApplication.Application.Ticket.Commands.EditTicket.EditTicketCommand

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit: @Model.Title</h1>


<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group m-3">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group m-3">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group m-3">
                <label class="control-label" asp-for="Priority">Priority level</label>
                <select asp-for="Priority"  class="form-select" aria-label=".form-select-lg example">
                    <option value="">-- Select Priority --</option>

                    @foreach (var priority in Enum.GetValues(typeof(HelpDeskApplication.Domain.Entities.PriorityLevel)))
                    {
                        <option value="@priority">@priority</option>
                    }
                </select>
                <span asp-validation-for="Priority" class="text-danger"></span>
            </div>

            <div class="form-group m-3">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
