@using HelpDeskApplication.Application.TicketComment.Commands;
@using HelpDeskApplication.Domain.Entities  
@model HelpDeskApplication.Application.Ticket.Queries.GetTicket.GetTicket

@{
    ViewData["Title"] = "Details";
}

<h1>Ticket: @Model.Title</h1>

<div>
 
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Priority)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Priority)
        </dd>
    
    </dl>
</div>
<div class="m3">
    @if (Model.IsEditable)
    {
        <a class="btn btn-outline-secondary" asp-controller="Ticket" asp-action="Edit" asp-route-encodedName="@Model.EncodedName">Edit</a>
    }
    |
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
    <br />
    <br />
    @if (!Model.HaveSolution)
    {
        <partial name="_CreateTicketComment" model="new CreateTicketCommentCommand() {TicketEncodedName = Model.EncodedName }" />
    }
</div>

<br />
<h3>Comments:</h3>
<br />
<div id="comments" class="column" data-encoded-name="@Model.EncodedName" ></div>

@if (Model.HaveSolution && Model.Status == TicketStatus.Open)
{
    <form method="post" action="/Ticket/@Model.EncodedName/Close">
        <button type="submit" class="btn btn-secondary">Close Ticket</button>
    </form>
}
@if (Model.HaveSolution && Model.Status == TicketStatus.Closed)
{
    <h2>Ticket is closed.</h2>

    <form method="post" action="/Ticket/@Model.EncodedName/Resume">
        <button type="submit" class="btn btn-secondary">Resume Ticket</button>
    </form>
}


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");

        <script src = "~/js/Ticket/Details.js"></script>

    }

}