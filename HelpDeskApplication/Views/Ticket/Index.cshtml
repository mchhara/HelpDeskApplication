@using HelpDeskApplication.Application.ApplicationUser.Queries.GetUserNameFromTicket;
@using MediatR;
@using HelpDeskApplication.Application.Ticket.Queries;
@using HelpDeskApplication.Domain.Entities;
@model IEnumerable<HelpDeskApplication.Application.Ticket.TicketDto>
@inject IMediator mediator


@{
    ViewData["Title"] = "Tickets";
    string? filterValue = ViewData["Filter"]?.ToString();
    string? userId = User.Identity?.Name;
}

<h1>Tickets</h1>
<br />


<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["Search"]" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<form asp-action="Index" method="get">
    <div class="form-group">
        <label for="statusFilter">Status Filter:</label>
        <select id="statusFilter" name="statusFilter" class="form-control">
            <option value="">All</option>
            <option value="Open" selected="@(filterValue == "Open")">Open</option>
            <option value="Closed" selected="@(filterValue == "Closed")">Closed</option>
            @if (User.IsInRole("User"))
            {
                <option value=@userId selected="@(filterValue == "My Tickets")">My Tickets</option>
            }
            @if (User.IsInRole("Technician"))
            {
                <option value=@userId selected="@(filterValue == "Tickets Assigned To Me")">Tickets Assigned To Me</option>
            }
        </select>
    </div>
    <button type="submit" class="btn btn-primary">Filter</button>
</form>
<br />

<a>
    <a asp-action="Create" class="btn btn-secondary">Create new</a>
</a>

<div class="card-header" style="text-align: center">
    <a> Sort by :</a>

    <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParm"]" asp-route-statusFilter="@ViewBag.Filter">Title</a>
    <a asp-action="Index" asp-route-sortOrder="@ViewData["PrioritySortParm"]" asp-route-statusFilter="@ViewBag.Filter">Priority</a>
    <a asp-action="Index" asp-route-sortOrder="@ViewData["StatusSortParm"]" asp-route-statusFilter="@ViewBag.Filter">Status</a>
</div>

<div class="row">
    @foreach (var item in Model)
    {

        <div class="card m-2" style="width: 18rem; border-width: 4px; border-color: 
                @(item.Priority == PriorityLevel.Low ? "green" : (item.Priority == PriorityLevel.Medium ? "orange" : "firebrick"));
                background-color: @(item.Status == TicketStatus.Closed ? "#D5DBDB" : "")">

            
            <div class="card-header">
                <h4 class="card-title mb-3">Ticket: <u>@item.Title</u>
                    @if (item.Status == TicketStatus.Closed)
                    {
                        <span style="color: red;">Closed</span>
                    }
                    </h4>
                <p class="card-subtitle mb-2 ">Assigned to: <strong>@await mediator.Send(new GetUserName(item.AssignedToId!))</strong></p>
            </div>

            <div class="card-body">
                <p class="card-subtitle mb-2 ">
                    <strong> Created at:</strong> @item.CreatedAt.ToString("dd.MM.yyyy H:mm") <br> by
                    <strong>@await mediator.Send(new GetUserName(item.CreateById!))</strong> </p>
                <p class="card-subtitle mb-2 "> <strong> Closed at: </strong>
                    @if (item.ClosedAt == null)
                    {
                        <a>---</a>
                    }
                    @item.ClosedAt?.ToString("dd.MM.yyyy H:mm")
                </p>
                <p class="card-subtitle mb-2 "> <strong> Priority: </strong> @item.Priority</p>
            </div>

            <div class="card-footer">
                <a class="btn btn-primary" asp-controller="Ticket" asp-action="Details" asp-route-encodedName="@item.EncodedName">Details</a>

                @if (User.IsInRole("User"))
                {
                    <form asp-action="Delete" asp-route-encodedName="@item.EncodedName" onsubmit="return confirm('Are you sure you want to delete this ticket?')" style="display: inline;">
                        <input type="submit" value="Delete" class="btn btn-danger" />
                    </form>
                }

                @if (item.IsEditable)
                {
                    <a class="btn btn-outline-secondary" asp-controller="Ticket" asp-action="Edit" asp-route-encodedName="@item.EncodedName">Edit</a>
                }

            </div>

        </div>
    }

</div>
    
