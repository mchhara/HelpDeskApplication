@using HelpDeskApplication.Application.ApplicationUser.Commands.AddRole;
@using HelpDeskApplication.Application.ApplicationUser.Commands.DeleteRole;
@using HelpDeskApplication.Application.ApplicationUser.Queries.GetUserRole;
@model HelpDeskApplication.Application.ApplicationUser.UserDto
@using MediatR
@inject IMediator mediator

@{
    var userRoleQuery = new GetUserRoleQuery(Model.Email!);
    var userRoles = await mediator.Send(userRoleQuery);
    var rolesString = string.Join(", ", userRoles);
    var userRolesList = userRoles.Select(role => role.Name).ToList();
}

<div>
    <div class="btn-group">
        <h4 style="margin-right: 20px;">User Management</h4>

        <partial name="_DeleteRole" model="new DeleteRoleCommand() { UserName = Model.Email, SelectedRoles = userRolesList }" />
        <partial name="_AddRole" model="new AddRoleCommand() { UserName = Model.Email, SelectedRoles = userRolesList }" />
        <form method="post" action="@Url.Action("Delete", new { name = Model.Email })">
            <input type="submit" value="Delete User" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this user?');" />
        </form>
    </div>

    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Email)
        </dd>
        <dt class="col-sm-2">
            Role
        </dt>
        <dd class="col-sm-10">
            @rolesString
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Index">Back to List</a>
</div>
